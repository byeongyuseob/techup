version: '3.8'

services:
  haproxy:
    image: haproxy:2.8
    container_name: haproxy
    ports:
      - "80:80"
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - nginx1
      - nginx2
    networks:
      - webnet

  nginx1:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx1
    volumes:
      - ./web:/var/www/html
      - nfs-shared:/var/www/html/nfs
    depends_on:
      - mysql
    networks:
      - webnet

  nginx2:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx2
    volumes:
      - ./web:/var/www/html
      - nfs-shared:/var/www/html/nfs
    depends_on:
      - mysql
    networks:
      - webnet

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: naver123
      MYSQL_DATABASE: testdb
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - webnet

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    restart: unless-stopped
    networks:
      - webnet

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    networks:
      - webnet

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    devices:
      - /dev/kmsg
    networks:
      - webnet

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - webnet

volumes:
  mysql-data:
  portainer-data:
  prometheus-data:
  grafana-data:
  nfs-shared:
    driver: local
    driver_opts:
      type: nfs
      o: addr=10.95.137.10,rw,nfsvers=4
      device: ":/nfs/shared"

networks:
  webnet:
    driver: bridge